version: '3.0'

services:
  # 指定服务名称
  sqlserver:
    # 指定服务使用的镜像
    image: mcr.microsoft.com/mssql/server
    # 指定容器名称
    container_name: sqlserver
    # 指定服务运行的端口
    ports:
      - "1433"
    # 指定容器中需要挂载的文件  
    volumes:
      - /data/sqlserver:/var/opt/mssql
    # 挂断自动重新启动  
    restart: always
    environment:
      - TZ=Asia/Shanghai
      - SA_PASSWORD=burningmyself
      - ACCEPT_EULA=Y

 # 指定服务名称
  redis:
    # 指定服务使用的镜像
    image: redis
    # 指定容器名称
    container_name: redis
    # 指定服务运行的端口
    ports:
      - 6379:6379
    # 指定容器中需要挂载的文件
    volumes:
      - /etc/localtime:/etc/localtime
      - /data/redis:/data
      - /data/redis/redis.conf:/etc/redis.conf
    # 挂断自动重新启动
    restart: always
    # 指定容器执行命令
    command: redis-server /etc/redis.conf --requirepass xiujingredis. --appendonly yes
    # 指定容器的环境变量
    environment:
      - TZ=Asia/Shanghai # 设置容器时区与宿主机保持一致
  # 指定服务名称
  mongo:
    # 指定服务使用的镜像
    image: mongo
    # 指定容器名称
    container_name: mongo
    # 指定服务运行的端口
    ports:
      - 27017:27017
    # 指定容器中需要挂载的文件
    volumes:
      - /etc/localtime:/etc/localtime
      - /data/mongodb/db:/data/db
      - /data/mongodb/configdb:/data/configdb
      - /data/mongodb/initdb:/docker-entrypoint-initdb.d      
    # 挂断自动重新启动
    restart: always
    # 指定容器的环境变量
    environment:
      - TZ=Asia/Shanghai # 设置容器时区与宿主机保持一致
      - AUTH=yes
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin 

  AdminApiGateway.Host:
    image: 'volosoft/microservice-demo-public-website-gateway:${TAG:-latest}'
    build:
      context: ../dotnet
      dockerfile: micro/gateways/AdminApiGateway.Host/Dockerfile
    depends_on:
      - sqlserver
      - redis
      - mongo    

  Base.IdentityServer:
    image: 'Base.IdentityServer:${TAG:-latest}'
    build:
      context: ../dotnet
      dockerfile: micro/modules/base/host/Base.IdentityServer/Dockerfile
    depends_on:
      - sqlserver
      - redis
      - mongo
      - AdminApiGateway.Host

  Base.HttpApi.Host:
    image: 'Base.HttpApi.Host:${TAG:-latest}'
    build:
      context: ../dotnet
      dockerfile: micro/modules/base/host/Base.HttpApi.Host/Dockerfile
    depends_on:
      - sqlserver
      - redis
      - mongo
      - AdminApiGateway.Host
      - Base.IdentityServer
  
 